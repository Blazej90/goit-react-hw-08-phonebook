{"version":3,"file":"static/js/863.5a1ab08b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/App.module.css?42a9","components/ContactForm.js","components/ContactList.js","pages/Phonebook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"appContainer\":\"App_appContainer__Q73Qs\",\"pageTitle\":\"App_pageTitle__Qy8t9\",\"name\":\"App_name__HskMo\",\"addContactBtn\":\"App_addContactBtn__Mh7hm\",\"contactItem\":\"App_contactItem__LX5et\",\"deleteBtn\":\"App_deleteBtn__LMDbO\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addNewContact } from '../redux/contactsSlice';\nimport styles from '../App.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n\n  const handleAddContact = () => {\n    dispatch(addNewContact({ id: nanoid(), name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddContact();\n    }\n  };\n\n  return (\n    <div className={styles.appContainer}>\n      <p className={styles.name}>Name</p>\n      <label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          onKeyDown={handleKeyPress}\n        />\n      </label>\n      <p className={styles.name}>Phone Number</p>\n      <label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleNumberChange}\n          onKeyDown={handleKeyPress}\n        />\n      </label>\n      <button className={styles.addContactBtn} onClick={handleAddContact}>\n        Add contact\n      </button>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/contactsSlice';\nimport styles from '../App.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(state => state.contacts);\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(\n    contact =>\n      contact.name && contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul className={styles.contactList}>\n      {filteredContacts.map(contact => (\n        <li key={contact.id} className={styles.contactItem}>\n          {contact.name} - {contact.number}\n          <button\n            onClick={() => handleDeleteContact(contact.id)}\n            className={styles.deleteBtn}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { fetchContacts } from '../redux/contactsSlice';\nimport { selectLoading, selectError } from '../redux/auth/selectors';\nimport ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const isError = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n      </HelmetProvider>\n      <div>\n        <ContactForm />\n        <ContactList isLoading={isLoading} isError={isError} />\n      </div>\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","handleAddContact","addNewContact","id","nanoid","handleKeyPress","event","key","_jsxs","className","styles","children","_jsx","type","value","onChange","target","onKeyDown","onClick","contacts","useSelector","state","filter","filteredContacts","contact","toLowerCase","includes","map","deleteContact","isLoading","selectLoading","isError","selectError","useEffect","fetchContacts","HelmetProvider","Helmet","ContactForm","ContactList"],"sourceRoot":""}