{"version":3,"file":"static/js/625.7ff63dfb.chunk.js","mappings":"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","sources":["redux/userSlice.js","components/RegisterForm.js","pages/Register.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: null,\n  loading: false,\n  error: null,\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    loginStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess(state, action) {\n      state.loading = false;\n      state.user = action.payload;\n    },\n    loginFailure(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logout(state) {\n      state.user = null;\n    },\n    registerStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    registerSuccess(state, action) {\n      state.loading = false;\n      state.user = action.payload;\n    },\n    registerFailure(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  registerStart,\n  registerSuccess,\n  registerFailure,\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { registerStart } from '../redux/userSlice';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await dispatch(registerStart({ name, email, password }));\n      console.log('Rejestracja udana!');\n    } catch (error) {\n      console.error('Błąd rejestracji:', error.message);\n    }\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={handleNameChange}\n          placeholder=\"Name\"\n        />\n        <input\n          type=\"email\"\n          value={email}\n          onChange={handleEmailChange}\n          placeholder=\"Email\"\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={handlePasswordChange}\n          placeholder=\"Password\"\n        />\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport RegisterForm from '../components/RegisterForm';\n\nconst Register = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n      <RegisterForm />\n    </HelmetProvider>\n  );\n};\n\nexport default Register;\n"],"names":["userSlice","createSlice","name","initialState","user","loading","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","registerStart","registerSuccess","registerFailure","_userSlice$actions","actions","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","dispatch","useDispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","event","_context","prev","next","preventDefault","console","log","t0","message","stop","_x","apply","arguments","_jsxs","children","_jsx","Helmet","onSubmit","type","value","onChange","target","placeholder","HelmetProvider","RegisterForm"],"sourceRoot":""}